#Использовать fs

// Создает набор параметров необходимый для чтения описаний объектов
//
// Параметры:
//   Конфигурация - Конфигурация, Расширение - Объект для, которого необходимо чтение
//   ТипКорневогоЭлемента - Строка - Имя типа корневого элемента объекта
//
//  Возвращаемое значение:
//   Структура- Набор параметров чтения
//
Функция СоздатьПараметрыЧтения(Конфигурация, ТипКорневогоЭлемента) Экспорт

	ПараметрыЧтения = Новый Структура();
	ПараметрыЧтения.Вставить("ОписаниеКонфигурации", Конфигурация.ОписаниеКонфигурации());
	ПараметрыЧтения.Вставить("СтруктураКаталогов", Конфигурация.СтруктураКаталогов());
	ПараметрыЧтения.Вставить("ТипКорневогоЭлемента", ТипКорневогоЭлемента);
	ПараметрыЧтения.Вставить("ФорматВыгрузки", ПараметрыЧтения.СтруктураКаталогов.ФорматВыгрузки());

	Если ПараметрыЧтения.ФорматВыгрузки = ФорматыВыгрузки.EDT Тогда
		ЧитательОписаний = ЧтениеОписанийEDT;
	Иначе
		ЧитательОписаний = ЧтениеОписанийКонфигуратор;
	КонецЕсли;
	
	ПараметрыЧтения.Вставить("ЧитательОписаний", ЧитательОписаний);

	Возврат ПараметрыЧтения;
	
КонецФункции

// Читает описание структуры конфигурации
//	* Описание конфигурации
//	* Объекты конфигурации, включая все подсистемы
//	* Выполняет привязку объектов к подсистемам
//	* Определяет местоположение описаний (файлов и каталогов)
//
Процедура ПрочитатьСтруктуруКонфигурации(ПараметрыЧтения) Экспорт
	
	ПрочитатьОписаниеКонфигурации(ПараметрыЧтения);
	
КонецПроцедуры

// Читает описание объекта конфигурации
//
// Параметры:
//   ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. 
//			См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура ПрочитатьОписание(ОбъектКонфигурации) Экспорт
	
	ПараметрыЧтения = ОбъектКонфигурации.Конфигурация.ПараметрыЧтения();
	ОбъектКонфигурации.Описание = ПрочитатьФайлОписанияОбъекта(
			ПараметрыЧтения, ОбъектКонфигурации.ПутьКФайлу, ОбъектКонфигурации.Тип
		);
	
КонецПроцедуры

// Выполняет чтение подсистем и привязку объектов к ним
//
Процедура ЗаполнитьПодсистемыОбъектовКонфигурации(ПараметрыЧтения) Экспорт
	
	// дополним объекты информацией о подсистемах
	ПодсистемыКонфигурации = ПрочитатьПодсистемыКонфигурации(ПараметрыЧтения);

	ПараметрыЧтения.ОписаниеКонфигурации.ПодсистемыКонфигурации = ПодсистемыКонфигурации;

	Для Каждого ОбъектКонфигурации Из ПараметрыЧтения.ОписаниеКонфигурации.ОбъектыКонфигурации Цикл
		Отбор = Новый Структура("ОбъектМетаданных", ОбъектКонфигурации.Тип + "." + ОбъектКонфигурации.Наименование);
		Подсистемы = ПодсистемыКонфигурации.НайтиСтроки(Отбор);
		
		Если Подсистемы.Количество()  Тогда

			// ставим первую
			ОбъектКонфигурации.Подсистемы = Подсистемы;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Выполняет поиск всех модулей конфигурации
//
Процедура НайтиМодулиКонфигурации(ПараметрыЧтения) Экспорт
	
	ОписаниеКонфигурации = ПараметрыЧтения.ОписаниеКонфигурации;
	ОбъектыКонфигурации = ОписаниеКонфигурации.ОбъектыКонфигурации;
	СтруктураКаталогов = ПараметрыЧтения.СтруктураКаталогов;
	
	Для Каждого ОбъектКонфигурации Из ОбъектыКонфигурации Цикл

		ФайлыМодулей = СтруктураКаталогов.НайтиМодулиОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип, Истина);
		
		Для Каждого ИмяФайлаМодуля Из ФайлыМодулей Цикл

			ПолучитьОписаниеМодуляПоИмениФайла(ИмяФайлаМодуля, ОбъектКонфигурации, ОписаниеКонфигурации);

		КонецЦикла;

	КонецЦикла;

	ОписаниеКонфигурации.Модули.Сортировать("ПутьКФайлу");

КонецПроцедуры

// Читает и выполняет анализ содержимого модуля
//	Устанавливает реквизиты "НаборБлоков" и "Содержимое"
// Параметры:
//   СтрокаМодуль - СтрокаТаблицыЗначений - Базовое описание модуля
//
Процедура ПрочитатьСодержимоеМодуля(СтрокаМодуль) Экспорт

	СодержимоеМодуля = ЧтениеМодулей.ПрочитатьМодуль(СтрокаМодуль.ПутьКФайлу, СтрокаМодуль);
	СтрокаМодуль.Содержимое = СодержимоеМодуля.Содержимое;
	СтрокаМодуль.НаборБлоков = СодержимоеМодуля.БлокиМодуля;

	Если СтрокаМодуль.ТипМодуля = ТипыМодуля.ОбщийМодуль
			И СтрокаМодуль.Родитель <> Неопределено Тогда
			
		Если СтрокаМодуль.Родитель.Описание = Неопределено Тогда
			
			ПрочитатьОписание(СтрокаМодуль.Родитель);
			
		КонецЕсли;
			
		СтрокаМодуль.ОписаниеМодуля.Вставить("Глобальный", СтрокаМодуль.Родитель.Описание.Глобальный);
		
	КонецЕсли;

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////////////////////

Процедура ПрочитатьОписаниеКонфигурации(ПараметрыЧтения)
	
	// Выполняет чтение объектов первого уровня, вложенные объекты не читаются

	ОписаниеКонфигурации = ПараметрыЧтения.ОписаниеКонфигурации;
	СтруктураКаталогов = ПараметрыЧтения.СтруктураКаталогов;
	
	ФайлКонфигурации = СтруктураКаталогов.ИмяФайлаОписанияКонфигурации();
	
	Если Не ФС.ФайлСуществует(ФайлКонфигурации) Тогда

		ВызватьИсключение СтрШаблон("Файл описания конфигурации ""%1"" не обнаружен", ФайлКонфигурации);

	КонецЕсли;
	
	ДанныеКонфигурации = ПрочитатьФайлОписанияОбъекта(
			ПараметрыЧтения, ФайлКонфигурации, ПараметрыЧтения.ТипКорневогоЭлемента
		);
	
	// добавим руками объект "Configuration" для модулей приложения
	НовСтрока = РедакторКонфигурации.ЗарегистрироватьОбъектКонфигурации(
			ОписаниеКонфигурации, ПараметрыЧтения.ТипКорневогоЭлемента, ДанныеКонфигурации
		);
	НовСтрока.ПутьКФайлу = ФайлКонфигурации;
	
	Для Каждого Подчиненный Из ДанныеКонфигурации.Подчиненные Цикл
		
		ЧастиИмени = СтрРазделить(Подчиненный, ".");

		РедакторКонфигурации.ЗарегистрироватьОбъектКонфигурации(ОписаниеКонфигурации, ЧастиИмени[0], ЧастиИмени[1]);
		
	КонецЦикла;
	
	ДанныеКонфигурации.Удалить("Подчиненные");
	
	ОписаниеКонфигурации.СвойстваКонфигурации = ДанныеКонфигурации;

КонецПроцедуры

Функция ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ПутьКФайлу, ТипОбъекта)

	ПараметрыЧтенияОбъекта = ПараметрыСериализации.ПараметрыЧтения(ТипОбъекта, ПараметрыЧтения.ФорматВыгрузки);
	
	Описание = ПараметрыЧтения.ЧитательОписаний.ПрочитатьСвойстваИзФайла(ПутьКФайлу, ПараметрыЧтенияОбъекта);

	Возврат Описание;
	
КонецФункции

Процедура ПолучитьОписаниеМодуляПоИмениФайла(Знач ИмяФайлаМодуля, ОбъектКонфигурации, ОписаниеКонфигурации)

	ТипЭтогоМодуля = ТипыМодуля.ТипМодуляПоИмениФайла(ИмяФайлаМодуля);
	
	Если ПустаяСтрока(ТипЭтогоМодуля) Тогда
		
		Возврат;

	КонецЕсли;
	
	ФормаОбъекта = Неопределено;
	КомандаОбъекта = Неопределено;
	ПропускаемыйТип = ТипЭтогоМодуля = ТипыМодуля.МодульОбъекта
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульМенеджера
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.ОбщийМодуль
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульУправляемогоПриложения
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульСеанса
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульВнешнегоСоединения
			ИЛИ ТипЭтогоМодуля = ТипыМодуля.МодульОбычногоПриложения;

	Если ТипыМодуля.ЭтоМодульФормы(ТипЭтогоМодуля) Тогда

		ФормаОбъекта = ОписаниеКонфигурации.ФормыКонфигурации.Добавить();
		ФормаОбъекта.Родитель = ОбъектКонфигурации;
		ФормаОбъекта.ЭтоУправляемаяФорма = ТипЭтогоМодуля = ТипыМодуля.МодульУправляемойФормы;
		ФормаОбъекта.Наименование = ПолучитьИмяФормыИзИмениФайлаМодуля(ИмяФайлаМодуля);

	ИначеЕсли ТипЭтогоМодуля = ТипыМодуля.МодульКоманды Тогда

		КомандаОбъекта = ОписаниеКонфигурации.КомандыКонфигурации.Добавить();
		КомандаОбъекта.Родитель = ОбъектКонфигурации;
		КомандаОбъекта.Наименование = ПолучитьИмяКомандыИзИмениФайлаМодуля(ИмяФайлаМодуля);

	Иначе
		Если НЕ ПропускаемыйТип Тогда
			ВызватьИсключение "Тип модуля: " + ТипЭтогоМодуля + " не имеет алгоритма разбора";
		КонецЕсли;
	КонецЕсли;
	
	НовыйМодульКонфигурации = ОписаниеКонфигурации.Модули.Добавить();
	НовыйМодульКонфигурации.ТипМодуля = ТипЭтогоМодуля;
	НовыйМодульКонфигурации.ПутьКФайлу = ИмяФайлаМодуля;
	НовыйМодульКонфигурации.Родитель = ОбъектКонфигурации;
	НовыйМодульКонфигурации.РодительФорма = ФормаОбъекта;
	НовыйМодульКонфигурации.РодительКоманда = КомандаОбъекта;
	НовыйМодульКонфигурации.ОписаниеМодуля = Новый Структура();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////

Функция ПолучитьИмяФормыИзИмениФайлаМодуля(ПолноеИмяФайла)

	МассивЧастейИмени = СтрРазделить(ПолноеИмяФайла, ПолучитьРазделительПути());
	Если МассивЧастейИмени.Количество() > 3 Тогда

		Номер = 2;
		Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];
        Если Родитель = "Form" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Если Родитель = "Ext" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Возврат Родитель;

	Иначе

		ВызватьИсключение "Ошибочная структура имени файла: " + ПолноеИмяФайла;

	КонецЕсли;

	Возврат "";

КонецФункции

Функция ПолучитьИмяКомандыИзИмениФайлаМодуля(ПолноеИмяФайла)

	МассивЧастейИмени = СтрРазделить(ПолноеИмяФайла, ПолучитьРазделительПути());
	Если МассивЧастейИмени.Количество() > 3 Тогда

		Номер = 2;
		Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];
        
		Если Родитель = "Ext" Тогда

			Номер = Номер + 1;
			Родитель = МассивЧастейИмени[МассивЧастейИмени.Количество() - Номер];

		КонецЕсли;

		Возврат Родитель;

	Иначе

		ВызватьИсключение "Ошибочная структура имени файла: " + ПолноеИмяФайла;

	КонецЕсли;

	Возврат "";

КонецФункции

///////////////////////////////////////////////////////////////////

Функция ПрочитатьПодсистемыКонфигурации(ПараметрыЧтения)

	ОписаниеПодсистем = СтруктурыОписаний.ТаблицаОписанияПодсистем();

	Подсистемы = ПараметрыЧтения.ОписаниеКонфигурации.НайтиОбъектыПоТипу("Подсистема");
	
	Для Каждого Подсистема Из Подсистемы Цикл
		
		ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, Подсистема, Истина, Неопределено, Неопределено);

	КонецЦикла;
	
	Возврат ОписаниеПодсистем;

КонецФункции

Процедура ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, ОбъектКонфигурации, Знач Визуальная,
		Знач Родитель, РодительскаяПодсистема)
	
	ТипПодсистема = ТипыОбъектовКонфигурации.ИмяТипаПодсистема();
	ИмяФайлаОписание = ПараметрыЧтения.СтруктураКаталогов.ИмяФайлаОписанияОбъекта(
			ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип
		);
	
	СвойстваОписания = ПрочитатьФайлОписанияОбъекта(ПараметрыЧтения, ИмяФайлаОписание, ТипПодсистема);
	
	ОбъектКонфигурации.Описание = СвойстваОписания;
	ОбъектКонфигурации.ПутьКФайлу = ИмяФайлаОписание;
	ОбъектКонфигурации.ПутьККаталогу = ПараметрыЧтения.СтруктураКаталогов.КаталогФайловОбъекта(
			ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);
	
	Визуальная = Визуальная И СвойстваОписания.ВключатьВКомандныйИнтерфейс;

	Если СвойстваОписания.Синоним.Свойство("ru") Тогда
		СинонимПодсистемы = СвойстваОписания.Синоним.ru;
	ИначеЕсли СвойстваОписания.Синоним.Свойство("en") Тогда
		СинонимПодсистемы = СвойстваОписания.Синоним.en;
	Иначе
		СинонимПодсистемы = СвойстваОписания.Имя;
	КонецЕсли;

	ПредставлениеПодсистемы = ?(РодительскаяПодсистема = Неопределено,
			СинонимПодсистемы,
			РодительскаяПодсистема.Представление + "/" + СинонимПодсистемы
		);
	
	Если СвойстваОписания.Состав.Количество() Тогда
		Состав = СвойстваОписания.Состав;
	Иначе
		Состав = Новый Массив();
		Состав.Добавить(Неопределено);
	КонецЕсли;
	
	Для Каждого ОбъектМетаданных Из Состав Цикл
		
		ЭтаПодсистема = ОписаниеПодсистем.Добавить();
		ЭтаПодсистема.Имя = ОбъектКонфигурации.Наименование;
		ЭтаПодсистема.ИмяКратко = СвойстваОписания.Наименование;
		ЭтаПодсистема.Представление = ПредставлениеПодсистемы;
		ЭтаПодсистема.ПредставлениеКратко = СинонимПодсистемы;
		ЭтаПодсистема.ОбъектМетаданных = ОбъектМетаданных;
		ЭтаПодсистема.Визуальная = Визуальная;
		ЭтаПодсистема.Родитель = РодительскаяПодсистема;
		
		Описание = "";
		Если ЗначениеЗаполнено(СвойстваОписания.Комментарий) Тогда
			Описание = СвойстваОписания.Комментарий;
		КонецЕсли;
		Если ЗначениеЗаполнено(СвойстваОписания.Пояснение) Тогда
			Если ПустаяСтрока(Описание) Тогда
				Описание = СвойстваОписания.Пояснение;
			Иначе
				Описание = Описание + Символы.ПС + Символы.ПС + СвойстваОписания.Пояснение;
			КонецЕсли;
		КонецЕсли;
		
		ЭтаПодсистема.ПодсистемаОписание = Описание;

	КонецЦикла;

	Для Каждого ПолноеИмяПодсистемы Из СвойстваОписания.Подчиненные Цикл
		
		ИмяПодсистемы = СтрРазделить(ПолноеИмяПодсистемы, ".")[1];

		ВложеннаяПодсистема = ПараметрыЧтения.ОписаниеКонфигурации.ОбъектыКонфигурации.Добавить();
		ВложеннаяПодсистема.Тип = ТипПодсистема;
		ВложеннаяПодсистема.Наименование = ОбъектКонфигурации.Наименование + "." + ИмяПодсистемы;
		ВложеннаяПодсистема.ПолноеНаименование = СтрШаблон("%1.%2", ТипПодсистема, ИмяПодсистемы);
		ВложеннаяПодсистема.Родитель = ОбъектКонфигурации;

		ПрочитатьПодсистему(ПараметрыЧтения, ОписаниеПодсистем, ВложеннаяПодсистема, Визуальная,
			ОбъектКонфигурации, ЭтаПодсистема);
		
	КонецЦикла;

КонецПроцедуры
